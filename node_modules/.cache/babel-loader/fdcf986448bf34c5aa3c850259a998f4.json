{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Downloads\\\\project_youtube_clone-main\\\\project_youtube_clone-main\\\\src\\\\components\\\\VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: \"320px\"\n      },\n      boxShadow: \"none\",\n      borderRadius: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY`,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: (snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url) || demoThumbnailUrl,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '358px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: \"#1E1E1E\",\n        height: '106px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/${videoId}` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet !== null && snippet !== void 0 && snippet.channelId ? `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoChannelTitle, /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            sx: {\n              fontSize: \"12px\",\n              color: \"gray\",\n              ml: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_c = VideoCard;\nexport default VideoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Link","Typography","Card","CardContent","CardMedia","CheckCircleIcon","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelUrl","demoChannelTitle","VideoCard","video","id","videoId","snippet","width","xs","sm","md","boxShadow","borderRadius","thumbnails","high","url","title","height","backgroundColor","slice","channelId","channelTitle","fontSize","color","ml"],"sources":["C:/Users/Vishal/Downloads/project_youtube_clone-main/project_youtube_clone-main/src/components/VideoCard.jsx"],"sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\"; \nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\n\nconst VideoCard = ({ video: { id: { videoId }, snippet } }) => (\n  <Card sx={{ width: { xs: '100%', sm: '358px', md: \"320px\", }, boxShadow: \"none\", borderRadius: 0 }}>\n    <Link to={videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY` }>\n      <CardMedia image={snippet?.thumbnails?.high?.url || demoThumbnailUrl} alt={snippet?.title} \n        sx={{ width: { xs: '100%', sm: '358px'}, height: 180 }} \n      />\n    </Link>\n    <CardContent sx={{ backgroundColor: \"#1E1E1E\", height: '106px' }}>\n      <Link to={videoId ? `/video/${videoId}` : demoVideoUrl } >\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#FFF\">\n          {snippet?.title.slice(0, 60) || demoVideoTitle.slice(0, 60)}\n        </Typography>\n      </Link>\n      <Link to={snippet?.channelId ? `/channel/${snippet?.channelId}` : demoChannelUrl} >\n        <Typography variant=\"subtitle2\" color=\"gray\">\n          {snippet?.channelTitle || demoChannelTitle}\n          <CheckCircleIcon sx={{ fontSize: \"12px\", color: \"gray\", ml: \"5px\" }} />\n        </Typography>\n      </Link>\n    </CardContent>\n  </Card>\n);\n\nexport default VideoCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,eAAzD;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,cAAzC,EAAyDC,cAAzD,EAAyEC,gBAAzE,QAAiG,oBAAjG;;;AAEA,MAAMC,SAAS,GAAG;EAAA;;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAF,CAAN;MAAmBC;IAAnB;EAAT,CAAD;EAAA,oBAChB,QAAC,IAAD;IAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAE,MAAN;QAAcC,EAAE,EAAE,OAAlB;QAA2BC,EAAE,EAAE;MAA/B,CAAT;MAAoDC,SAAS,EAAE,MAA/D;MAAuEC,YAAY,EAAE;IAArF,CAAV;IAAA,wBACE,QAAC,IAAD;MAAM,EAAE,EAAEP,OAAO,GAAI,UAASA,OAAQ,EAArB,GAA0B,oBAA3C;MAAA,uBACE,QAAC,SAAD;QAAW,KAAK,EAAE,CAAAC,OAAO,SAAP,IAAAA,OAAO,WAAP,mCAAAA,OAAO,CAAEO,UAAT,qGAAqBC,IAArB,gFAA2BC,GAA3B,KAAkClB,gBAApD;QAAsE,GAAG,EAAES,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,KAApF;QACE,EAAE,EAAE;UAAET,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE;UAAlB,CAAT;UAAqCQ,MAAM,EAAE;QAA7C;MADN;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEC,eAAe,EAAE,SAAnB;QAA8BD,MAAM,EAAE;MAAtC,CAAjB;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAEZ,OAAO,GAAI,UAASA,OAAQ,EAArB,GAAyBP,YAA1C;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,UAAU,EAAC,MAA3C;UAAkD,KAAK,EAAC,MAAxD;UAAA,UACG,CAAAQ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEU,KAAT,CAAeG,KAAf,CAAqB,CAArB,EAAwB,EAAxB,MAA+BpB,cAAc,CAACoB,KAAf,CAAqB,CAArB,EAAwB,EAAxB;QADlC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,IAAD;QAAM,EAAE,EAAEb,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEc,SAAT,GAAsB,YAAWd,OAAZ,aAAYA,OAAZ,uBAAYA,OAAO,CAAEc,SAAU,EAApD,GAAwDpB,cAAlE;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,KAAK,EAAC,MAAtC;UAAA,WACG,CAAAM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEe,YAAT,KAAyBpB,gBAD5B,eAEE,QAAC,eAAD;YAAiB,EAAE,EAAE;cAAEqB,QAAQ,EAAE,MAAZ;cAAoBC,KAAK,EAAE,MAA3B;cAAmCC,EAAE,EAAE;YAAvC;UAArB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADgB;AAAA,CAAlB;;KAAMtB,S;AAuBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}